{
  "name": "c3po-grpc-gateway",
  "tagline": "A light weight Python grpc gateway with tornado named c3po.",
  "body": "# C3PO\r\n\r\nA light weight Python gRPC transport layer gateway with tornado named c3po.\r\n\r\n# Overview\r\n\r\nThis is a light weight Python gRPC gateway. A simple transform layer. Translate gRPC protobuf objects to JSON objects.\r\n\r\nSometimes we are using gRPC and protobuf, but for Web and other language which not support gRPC, we could use this simple transport layer.\r\n\r\n<p align=\"center\">\r\n<img src=\"https://raw.githubusercontent.com/qiajigou/c3po-grpc-gateway/master/images/c3po.png\" width=\"500px\">\r\n</p>\r\n\r\n# Example\r\n\r\nJust look into the examples folder.\r\n\r\n## Protobuf\r\n\r\nUse method option.\r\n\r\n```diff\r\nsyntax = \"proto3\";\r\n\r\n+ import \"google/protobuf/descriptor.proto\";\r\n+\r\n+ extend google.protobuf.MethodOptions {\r\n+     MO mo = 50006;\r\n+ }\r\n+\r\n+ message MO {\r\n+     string method = 1;\r\n+ }\r\n\r\nmessage HelloRequest {\r\n    string say    = 1;\r\n}\r\n\r\nmessage HelloResponse {\r\n    string reply  = 1;\r\n}\r\n\r\nservice SimpleService {\r\n    rpc Hello(HelloRequest) returns (HelloResponse){\r\n+       option (mo).method = \"GET\";\r\n    }\r\n}\r\n```\r\n\r\n## Python\r\n\r\nRight now we could run `gen_code.sh`. We get `server_pb2.py`. But C3PO could not transform gRPC/Protobuf Project to HTTP/JSON. We have to create a gRPC client to connect with server.\r\n\r\nThe best way is load client codes dynamic.\r\n\r\nIf we have a gRPC service called A, we need to have A server and A client.\r\n\r\nC3PO load A client dynamic and call client function by using A client.\r\n\r\n## C3PO server\r\n\r\n```python\r\nfrom c3po.server import Server, Stub\r\n\r\napp = Server()\r\n\r\nstub = Stub()\r\nstub.name = 'hello'\r\n# load client py from path\r\nstub.client_import_type = 'path'\r\nstub.client_module_path = (CURRENT_DIR + '/grpc/client.py')\r\nstub.client_module_name = 'client'\r\n# this means client.get_client()\r\nstub.get_client_func = 'get_client'\r\n\r\nstub.server_pb2_import_type = 'path'\r\n# Python get method option is hard\r\n# right now read option from server_pb2\r\nstub.server_pb2_module_name = 'server_pb2'\r\nstub.server_pb2_module_path = (CURRENT_DIR + '/grpc/server_pb2.py')\r\n\r\n# we could regist multi stub\r\napp.register(stub)\r\n\r\ntry:\r\n    print('running server on 0.0.0.0:8888')\r\n    app.run(debug=True)\r\nexcept KeyboardInterrupt:\r\n    pass\r\n```\r\n\r\n1. `grpc` folder has grpc server and grpc client\r\n2. `examples` folder has c3po server\r\n\r\n# Dynamic module loader\r\n\r\nWe have two way to load the client\r\n\r\n1. import client from module\r\n2. import client from path\r\n\r\n# TODO\r\n\r\nThis is in develop.\r\n\r\nContact me at x@guojing.me",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}